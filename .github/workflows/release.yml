# Creates a github release on https://github.com/biom8er/phymes/releases
# when a tag is pushed to the repository
# see https://github.com/github-changelog-generator/github-changelog-generator 
# for automated changelog instructions

name: Release
on:
  push:
    tags:
      - '*'
      - '!*-rc*'
permissions:
  contents: write
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  release:
    name: Publish
    runs-on: self-hosted #ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Releases
        run: |
          version=${GITHUB_REF_NAME}
          title="phymes ${version}"
          notes_file=CHANGELOG.md
          gh release create ${GITHUB_REF_NAME} \
            --title "${title}" \
            --notes-file ${notes_file} \
            --verify-tag

  bundle-candle:
    if: false
    needs: release
    name: Bundle the application for candle
    runs-on: self-hosted #ubuntu-latest
    strategy:
      matrix:
        version: [12.6.2, 12.9.1]
        os: [ubuntu24.04]
    container:
      # DM: needs to match the version installed on the machine
      # e.g., currently 12.6.2 for cudarc-0.12.1
      image: nvidia/cuda:${{ matrix.version }}-cudnn-devel-${{ matrix.os }}
      options: --gpus 0
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/cuda-build-env
      - name: Build the server
        run: |
          cargo build -p phymes-server --features wsl-gpu,candle --release
      - name: Install Dioxus
        shell: bash
        run: |
          cargo install dioxus-cli --forced
      - name: Build the application
        run: |
          dx bundle -p phymes-app --release
      - name: Bundle the application
        run: |
          mv target/release/phymes-server target/dx/phymes-app/release/web/public/phymes-server
          tar -czf phymes-candle-cuda${{ matrix.version }}-${{ matrix.os }}.tar.gz target/dx/phymes-app/release/web/public
          gh release upload ${GITHUB_REF_NAME} phymes-candle-cuda${{ matrix.version }}-${{ matrix.os }}.tar.gz

  bundle-openai:
    name: Bundle the application for openai api
    needs: release
    runs-on: self-hosted #ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu24.04]
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/rust-build-env
      - name: Build the server
        run: |
          cargo build -p phymes-server --features wsl --release
      - name: Install Dioxus
        shell: bash
        run: |
          cargo install dioxus-cli --forced
      - name: Build the application
        run: |
          dx bundle -p phymes-app --release
      - name: Bundle the application
        run: |
          mv target/release/phymes-server target/dx/phymes-app/release/web/public/phymes-server
          tar -czf phymes-openai-${{ matrix.os }}.tar.gz target/dx/phymes-app/release/web/public
          gh release upload ${GITHUB_REF_NAME} phymes-openai-${{ matrix.os }}.tar.gz

  publish:
    name: publish to crates.io
    runs-on: self-hosted #ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/rust-build-env
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -p phymes-core --no-verify
          cargo publish -p phymes-agents --no-verify
          cargo publish -p phymes-server --no-verify
          cargo publish -p phymes-app --no-verify
          
  pages:
    name: Upload MDBook
    runs-on: self-hosted #ubuntu-latest
    container:
      image: amd64/rust
    permissions:
      contents: write  # To push a branch 
      pages: write  # To push to a GitHub Pages site
      id-token: write # To update the deployment status
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Rust toolchain
        uses: ./.github/actions/rust-build-env
      - name: Test Book
        run: |
          mdbook test phymes-book
      - name: Build Book
        run: |
          mdbook build phymes-book
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: mdbook
          path: target/book
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: mdbook